<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [<!ENTITY % BOOK_ENTITIES SYSTEM "../User_Guide.ent">%BOOK_ENTITIES;]>

<section id="ratype_sbb_code_examples">

	<title>Sbb Code Examples</title>

	<para>The following code shows complete flow of application receiving the AMQP Message request. Application sends back an AMQP mesasge and finally application closes the AMQP connection</para>
	
	
		<programlisting language="java">
public abstract class AmqpExampleSbb implements Sbb {
	
	private Tracer tracer;
	
	
	public void onAMQPEvent(org.mobicents.slee.resources.amqp.AMQPEvent event, 
			ActivityContextInterface aci/*, EventContext eventContext*/) {
		
		
			// Get the amqpMessage
			Massage received = event.getAmqpMessage();  
			
			tracer.info(  "AMQP Event received ");
			
			Message response = new Message("this is a reply".getBytes(), null);
			
		    // Get the activity object from the ACI.
		    AMQPActivity amqp = ()AMQPActivity)aci.createcreateAMQPActivity();
		    
		    //reply
		    amqp.basicPublish(response);
		    
		    aci.detach(getSbbLocalObject());
		    tracer.info("Activity detached." );
		
	}	
	
	
	
	// TODO: Perform further operations if required in these methods.
	public void setSbbContext(SbbContext context) { 
		
		this.sbbContext = (SbbContextExt) context; 
		tracer = context.getTracer(this.getClass().getSimpleName());
		
	}
	public void unsetSbbContext() { this.sbbContext = null; }

	// TODO: Implement the lifecycle methods if required
	public void sbbCreate() throws javax.slee.CreateException {}
	public void sbbPostCreate() throws javax.slee.CreateException {}
	public void sbbActivate() {}
	public void sbbPassivate() {}
	public void sbbRemove() {}
	public void sbbLoad() {}
	public void sbbStore() {}
	public void sbbExceptionThrown(Exception exception, Object event, ActivityContextInterface activity) {}
	public void sbbRolledBack(RolledBackContext context) {}
	

	
	/**
	 * Convenience method to retrieve the SbbContext object stored in setSbbContext.
	 * 
	 * TODO: If your SBB doesn't require the SbbContext object you may remove this 
	 * method, the sbbContext variable and the variable assignment in setSbbContext().
	 *
	 * @return this SBB's SbbContext object
	 */
	
	protected SbbContextExt getSbbContext() {
		return sbbContext;
	}

	private SbbContextExt sbbContext; // This SBB's SbbContext

}
		</programlisting>
	
</section>
